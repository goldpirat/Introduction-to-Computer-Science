mulsi3:
    # Initialize the result to zero
    li a0, 0 

    multiplicity_loop:
    
    # If a is zero, exit the loop
    beqz a0, multiplicity_exit

    # If a is odd, then the lowest order bit of a is 1
    andi t0, a0, 1

    # Branch if == to zero
    beqz t0, skip

    # Result = Result + a1
    add a0, a0, a1

    skip:

    # Right bit shift a by 1 position
    srl a0, a0, 1

    # Left bit shift a by 1 position
    sll a1, a1, 1

    # Jump to loop (aka Repeat the Loop)
    j multiplicity_loop

    multiplicity_exit:
    # Return: Result is already in a0    
    ret