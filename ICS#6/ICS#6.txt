-- Author: Flori Kusari

module Main (main) where

import Test.HUnit

-- The function diet implements the rules directly.
diet :: Bool -> Bool -> Bool -> Bool
diet b f i = (b || f) && (not i || not (b && f)) && (not f || not (i || not b))

-- The function diet' implements the simplified formula.
diet' :: Bool -> Bool -> Bool -> Bool
diet' b f i = b && (not f || not i)

truthTable :: (Bool -> Bool -> Bool -> Bool) -> [(Bool, Bool, Bool, Bool)]
truthTable z = [(b, f, i, z b f i) | b <- [True, False], f <- [True, False], i <- [True, False]]

-- Test whether the two truth tables returned are the same.
dietTests = TestList [ truthTable diet ~?= truthTable diet' ]

main = runTestTT dietTests